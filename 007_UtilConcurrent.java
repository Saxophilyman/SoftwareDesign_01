// По предыдущему заданию:
// Крутой способ вывести синхронизацию отдельно на метод.

// В реальных проектах логика параллельной работы во много раз сложнее, 
// поэтому и выявлять баги существенно труднее, и тесты не особо помогают, 
// так как часто невозможно смоделировать конкретные ситуации, завязанные на микро(милли)секундные шаги.
// И иногда возникает вопрос действительно использование многопоточности так необходимо?
// Воспринимается всегда круто, но хотя бы с линейным разобраться..

// synchronized, ReentrantLock, Semaphores, Read-Write Locks, Barriers, CompletableFuture, Atomics, ExecutorService, CountDownLatch, Реактивные потоки
// Выглядит ошеломляюще, с большинством из них знакомился и приятно удивлён, что запомнил их концепции. 
//---------------------------
